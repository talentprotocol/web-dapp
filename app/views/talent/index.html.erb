<div class="lg-overflow-y-scroll px-0 d-flex flex-column flex-lg-row w-100 border-left">
  <main class="d-flex flex-column col-12 p-3 h-100">
    <div class="d-flex flex-row flex-wrap-reverse flex-md-nowrap justify-content-end justify-content-md-between">
      <%= react_component("TalentNameSearch",
        props: {},
        prerender: false, html_options: { class: "w-100 mr-2"}) %>
      <div class="d-flex mb-3 mb-md-0">
        <%= react_component("UserMenu",
          props: {
            user: {
              id: current_user.id,
              profilePictureUrl: current_user.talent&.profile_picture_url || current_user.investor&.profile_picture_url,
              talentId: current_user.talent&.id,
              investorId: current_user.investor&.id,
              isTalent: current_user.talent.present?,
              displayWalletId: current_user.display_wallet_id,
              walletId: current_user.wallet_id,
              username: current_user.username,
              tokenLive: current_user.talent&.token&.contract_id.present?,
              code: current_user.invite&.code,
              invitesLeft: current_user.invite&.invites_left,
              totalInvites: current_user.invite&.max_uses,
              currentTheme: current_user.theme_preference,
              sign_up_path: sign_up_path(code: current_user.invite&.code)
            },
            signOutPath: sign_out_path
          },
          prerender: false) %>
        <%= react_component("Notifications",
          props: {
            notifications: current_user.notifications.includes([:source]).order(id: :desc).map { |notif| { id: notif.id, title: notif.title, body: notif.body, user_id: notif.user_id, type: notif.type, read: notif.read, source_id: notif.source_id, username: notif.user.username, source_username: notif.source&.username, talent_id: notif.user.talent&.id, source_talent_id: notif.source&.talent&.id, created_at: notif.updated_at } },
          },
          prerender: false, html_options: { class: "ml-2"})
        %>
      </div>
    </div>
    <%= react_component("ActiveTalents",
      props: {
        talents: @active_talents.map { |talent| { id: talent.id, profilePictureUrl: talent.profile_picture_url, contract_id: talent.token.contract_id, occupation: talent.occupation, ticker: talent.token.ticker, username: talent.user.username, name: talent.user.display_name.present? ? talent.user.display_name : talent.user.username }}
      },
      prerender: false) %>
    <%= react_component("UpcomingTalents",
      props: {
        talents: @upcoming_talents.map { |talent| { id: talent.id, profilePictureUrl: talent.profile_picture_url, occupation: talent.occupation, name: talent.user.display_name || talent.user.username, username: talent.user.username }}
      },
      prerender: false) %>
    <%= react_component("TalentTable",
      props: {
        talents: @active_talents.map { |talent| { id: talent.id, profilePictureUrl: talent.profile_picture_url, contract_id: talent.token.contract_id, occupation: talent.occupation, ticker: talent.token.ticker, isFollowing: current_user.following.where(user_id: talent.user_id).exists?, username: talent.user.username, user_id: talent.user_id }}
      },
      prerender: false) %>
  </main>
</div>
