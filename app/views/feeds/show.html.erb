<main class="lg-overflow-y-scroll border-left lg-h-100 w-100">
  <%= react_component("Home", props: {
    user: {
      id: current_user.id,
      profilePictureUrl: current_user.talent&.profile_picture_url || current_user.investor&.profile_picture_url,
      displayName: current_user.display_name.blank? ? current_user.username : current_user.display_name,
      talentId: current_user.talent&.id,
      investorId: current_user.investor&.id,
      isTalent: current_user.talent.present?,
      displayWalletId: current_user.display_wallet_id,
      walletId: current_user.wallet_id,
      username: current_user.username,
      tokenLive: current_user.talent&.token&.contract_id.present?,
      code: current_user.invite&.code,
      invitesLeft: current_user.invite&.invites_left,
      totalInvites: current_user.invite&.max_uses,
      sign_up_path: sign_up_path(code: current_user.invite&.code)
    },
    activeTalents: @active_talents.map { |tal| { id: tal.id, name: tal.user.display_name.present? ? tal.user.display_name : tal.user.username, username: tal.user.username, ticker: tal.token.ticker, contract_id: tal.token.contract_id, profilePictureUrl: tal.profile_picture_url } },
    upcomingTalents: @upcoming_talents.map { |tal| { id: tal.id, name: tal.user.display_name.present? ? tal.user.display_name : tal.user.username, username: tal.user.username, ticker: tal.token.ticker, profilePictureUrl: tal.profile_picture_url }},
    posts: @posts.map(&:to_json),
    notifications: current_user.notifications.includes([:source]).order(id: :desc).map { |notif| { id: notif.id, username: notif.user.username, source_username: notif.source&.username, title: notif.title, body: notif.body, user_id: notif.user_id, type: notif.type, read: notif.read, source_id: notif.source_id, talent_id: notif.user.talent&.id, source_talent_id: notif.source&.talent&.id, created_at: notif.updated_at } },
    signOutPath: sign_out_path,
  }, prerender: false, html_options: { class: "d-flex flex-column-reverse flex-lg-row  w-100 lg-h-100" }) %>
</main>
